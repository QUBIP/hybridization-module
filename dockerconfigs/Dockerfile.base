# Dockerfile.base
FROM python:3.10 AS builder

# Install build tools and dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    ninja-build \
    git \
    automake \
    autoconf \
    jq && \
    rm -rf /var/lib/apt/lists/*

# Build argument for liboqs configuration
ARG LIBOQS_BUILD_DEFINES="-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DOQS_USE_OPENSSL=OFF"

WORKDIR /opt
# Clone repositories for liboqs and its Python bindings
RUN git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs.git && \
    git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs-python.git

# Build liboqs
WORKDIR /opt/liboqs
RUN mkdir build && cd build && \
    cmake -GNinja .. ${LIBOQS_BUILD_DEFINES} && \
    ninja install

# Build the Python module as a wheel using the build module
WORKDIR /opt/liboqs-python
RUN pip install build && python3 -m build --wheel && cp dist/*.whl /tmp/

# ---------------------------
# Final runtime image
FROM python:3.10

# Install runtime system dependencies
RUN apt-get update && apt-get install -y \
    openssl \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy liboqs shared libraries and headers from the builder stage
COPY --from=builder /usr/local/lib /usr/local/lib
COPY --from=builder /usr/local/include /usr/local/include

# Install the liboqs-python wheel built in the builder stage
COPY --from=builder /tmp/*.whl /tmp/
RUN pip install /tmp/*.whl && rm -rf /tmp/*.whl

# Make sure the dynamic linker can find liboqs
ENV LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"

# Optional: quick test to verify installation
RUN python -c "import oqs; print('oqs installed successfully')"
